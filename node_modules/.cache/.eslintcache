[{"C:\\Users\\Lee Sze\\Documents\\fcc-frontend-lib-proj\\25+5_clock\\25_5_clock\\src\\index.js":"1","C:\\Users\\Lee Sze\\Documents\\fcc-frontend-lib-proj\\25+5_clock\\25_5_clock\\src\\App.js":"2","C:\\Users\\Lee Sze\\Documents\\fcc-frontend-lib-proj\\25+5_clock\\25_5_clock\\src\\Clock.js":"3","C:\\Users\\Lee Sze\\Documents\\fcc-frontend-lib-proj\\25+5_clock\\25_5_clock\\src\\Footer.js":"4"},{"size":166,"mtime":1655371763424,"results":"5","hashOfConfig":"6"},{"size":234,"mtime":1655395439015,"results":"7","hashOfConfig":"6"},{"size":7296,"mtime":1655402037093,"results":"8","hashOfConfig":"6"},{"size":381,"mtime":1655403680510,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","suppressedMessages":"12","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1grvyg9",{"filePath":"13","messages":"14","suppressedMessages":"15","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"16","messages":"17","suppressedMessages":"18","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"19"},{"filePath":"20","messages":"21","suppressedMessages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"23"},"C:\\Users\\Lee Sze\\Documents\\fcc-frontend-lib-proj\\25+5_clock\\25_5_clock\\src\\index.js",[],[],"C:\\Users\\Lee Sze\\Documents\\fcc-frontend-lib-proj\\25+5_clock\\25_5_clock\\src\\App.js",[],[],"C:\\Users\\Lee Sze\\Documents\\fcc-frontend-lib-proj\\25+5_clock\\25_5_clock\\src\\Clock.js",["24"],[],"import React, { useState, useEffect } from \"react\";\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport {faPause, faPlay, faRotateLeft} from '@fortawesome/free-solid-svg-icons'\r\n\r\nconst SESSION = 'SESSION';\r\nconst BREAK = 'BREAK';\r\n\r\n// Define timer initial state\r\nconst timerIniState = {\r\n    SESSION: {\r\n        total: 1500,\r\n        durationLeft: 1500,\r\n        isPaused: true\r\n    },\r\n    BREAK: {\r\n        total: 300,\r\n        durationLeft: 300,\r\n        isPaused: true\r\n    }\r\n}\r\n\r\n// Import alarm beep audio\r\nconst alarm_sound = require('./sounds/alarm_clock.mp3');\r\n\r\nconst otherTimer = (current) => {\r\n    switch(current) {\r\n        case SESSION:\r\n            return BREAK;\r\n        case BREAK:\r\n            return SESSION\r\n    }\r\n}\r\n\r\nexport default function Clock() {\r\n\r\n    const [timers, setTimers] = useState({SESSION: {...timerIniState.SESSION}, BREAK: {...timerIniState.BREAK}});\r\n    const [currentTimer, setCurrentTimer] = useState(SESSION);\r\n    const [isRunning, setIsRunning] = useState(false);\r\n    const alarm = document.getElementById('beep');\r\n\r\n    // Reset timers\r\n    function resetAll() {\r\n        setTimers({SESSION: {...timerIniState.SESSION}, BREAK: {...timerIniState.BREAK}})\r\n        setCurrentTimer(SESSION)\r\n        setIsRunning(false)\r\n\r\n        // Reset alarm (beep)\r\n        alarm.pause()\r\n        alarm.currentTime = 0;\r\n    }\r\n\r\n    // Increment / decrement timers\r\n    function updateTimer(event) {\r\n        let target = event.target.id.split('-')[0].toUpperCase();   // Determine if target is session or break\r\n        let val = event.target.value;\r\n\r\n        if (!isRunning) {\r\n\r\n            // Decrement target duration if duration is more than 1 min\r\n            if (val === '-' && timers[target].total > 60) {         \r\n                setTimers(prev => {\r\n                    return {\r\n                        ...prev,\r\n                        [target]: {\r\n                            ...prev[target],\r\n                            total: prev[target].total - 60,\r\n                            durationLeft: prev[target].total - 60,\r\n                        }\r\n                    }\r\n                })\r\n\r\n            // Increment target duration if duration is less than 60 mins\r\n            } else if (val === '+' && timers[target].total < 3600) {       \r\n                setTimers(prev => {\r\n                    return {\r\n                        ...prev,\r\n                        [target]: {\r\n                            ...prev[target],\r\n                            total: prev[target].total + 60,\r\n                            durationLeft: prev[target].total + 60\r\n                        }\r\n                    }\r\n                })\r\n            }\r\n        }\r\n    }   \r\n\r\n    // Play or pause current timer\r\n    function runTimer() {\r\n        setIsRunning(!isRunning);\r\n\r\n        setTimers(prev => {\r\n            return {\r\n                ...prev,\r\n                [currentTimer]: {\r\n                    ...prev[currentTimer],\r\n                    isPaused: !prev[currentTimer].isPaused\r\n                }\r\n            }\r\n        })\r\n    }\r\n\r\n\r\n    // Countdown timer\r\n    useEffect(() => {\r\n        const interval = setInterval(() => {\r\n\r\n            if (timers[currentTimer].durationLeft === 1) {\r\n                // Play alarm sound\r\n                alarm.currentTime = 0;\r\n                alarm.play();\r\n            }\r\n\r\n            // If timer reaches 0, start other timer\r\n            if (timers[currentTimer].durationLeft === 0) {\r\n\r\n                clearInterval(interval);\r\n                setCurrentTimer(otherTimer(currentTimer));\r\n\r\n                setTimers(prev => {\r\n                    return {\r\n                        ...prev,\r\n                        [currentTimer]: {\r\n                            ...prev[currentTimer],\r\n                            isPaused: true,\r\n                            durationLeft: prev[currentTimer].total\r\n                        },\r\n                        [otherTimer(currentTimer)]: {\r\n                            ...prev[otherTimer(currentTimer)],\r\n                            isPaused: false\r\n                        }\r\n                    }\r\n                })\r\n                \r\n            // Else continue counting down current timer\r\n            } else if (!timers[currentTimer].isPaused) {\r\n                setTimers(prev => {\r\n                    return {\r\n                        ...prev,\r\n                        [currentTimer]: {\r\n                            ...prev[currentTimer],\r\n                            durationLeft: prev[currentTimer].durationLeft - 1\r\n                        }\r\n                    }\r\n                })\r\n            }\r\n        }, 1000);\r\n        return () => clearInterval(interval);\r\n    })\r\n    \r\n    return (\r\n        <div id=\"clock\">\r\n            <div id=\"decorative-top\">\r\n                <span></span>\r\n                <span></span>\r\n                <span></span>\r\n                <span></span>\r\n            </div>\r\n            <h1 id=\"main-title\">25 + 5 Clock</h1>\r\n\r\n            <section id=\"input-section\">\r\n                <div id=\"session-input\">\r\n                    <h3 id=\"session-label\" className=\"length-label\">Session (min)</h3>\r\n                    <div className=\"input-container\">\r\n                        <button className=\"decrement\" id=\"session-decrement\" value=\"-\" onClick={updateTimer}>-</button>\r\n                        <p className=\"duration\" id=\"session-length\">{Math.floor(timers.SESSION.total / 60)}</p>\r\n                        <button className=\"increment\" id=\"session-increment\" value=\"+\" onClick={updateTimer}>+</button>\r\n                    </div>\r\n                </div>\r\n\r\n                <div id=\"break-input\">\r\n                    <h3 id=\"break-label\" className=\"length-label\">Break (min)</h3>\r\n                    <div className=\"input-container\">\r\n                        <button className=\"decrement\" id=\"break-decrement\" value=\"-\" onClick={updateTimer}>-</button>\r\n                        <p className=\"duration\" id=\"break-length\">{Math.floor(timers.BREAK.total / 60)}</p>\r\n                        <button className=\"increment\" id=\"break-increment\" value=\"+\" onClick={updateTimer}>+</button>\r\n                    </div>\r\n                </div>\r\n            </section>\r\n\r\n            <section id=\"timer\">\r\n                <div id=\"timer-container\">\r\n                    <h3 id=\"timer-label\">{currentTimer}</h3>\r\n                    <audio src={alarm_sound} type=\"audio/wav\" id=\"beep\"></audio>\r\n                    <p id=\"time-left\" style={timers[currentTimer].durationLeft <= 10 ? {'animation': 'blink 1s infinite'} : {'animation': 'none'}}>\r\n                        {(Math.floor(timers[currentTimer].durationLeft / 60)).toLocaleString('en-US', {minimumIntegerDigits: 2})}:{\r\n                        (timers[currentTimer].durationLeft % 60).toLocaleString('en-US', {minimumIntegerDigits: 2})}</p>\r\n                    <div id=\"timer-ctrl\">\r\n                        <button onClick={runTimer} id=\"start_stop\"><FontAwesomeIcon icon={isRunning ? faPause : faPlay} /></button>\r\n                        <button id=\"reset\" onClick={resetAll}><FontAwesomeIcon icon={faRotateLeft} /></button>\r\n                    </div>\r\n                </div>\r\n            </section>\r\n        </div>\r\n    )\r\n}\r\n","C:\\Users\\Lee Sze\\Documents\\fcc-frontend-lib-proj\\25+5_clock\\25_5_clock\\src\\Footer.js",["25"],[],"import React from \"react\";\r\n\r\nexport default function Footer() {\r\n    return (\r\n        <footer>\r\n            <address>Created by <a href=\"https://github.com/FooLeeSze/fcc-25_5_clock\" target=\"_blank\">Lee Sze Foo</a></address>\r\n            <p>Alarm sound by <a href=\"https://www.zedge.net/ringtone/231254e0-fce3-31a6-9a6a-0f8d5ec5d701\">lawknight</a></p>\r\n        </footer>\r\n    )\r\n}",{"ruleId":"26","severity":1,"message":"27","line":26,"column":5,"nodeType":"28","messageId":"29","endLine":31,"endColumn":6},{"ruleId":"30","severity":1,"message":"31","line":6,"column":33,"nodeType":"32","messageId":"33","endLine":6,"endColumn":103,"fix":"34"},"default-case","Expected a default case.","SwitchStatement","missingDefaultCase","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" (which implies rel=\"noopener\") is a security risk in older browsers: see https://mathiasbynens.github.io/rel-noopener/#recommendations","JSXOpeningElement","noTargetBlankWithoutNoreferrer",{"range":"35","text":"36"},[199,199]," rel=\"noreferrer\""]